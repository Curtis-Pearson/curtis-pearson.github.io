@font-face {
    font-family: "Barlow";
    src: url("./fonts/Barlow-Regular.ttf");
}

@font-face {
    font-family: "Barlow-Bold";
    src: url("./fonts/Barlow-Bold.ttf");
}

@font-face {
    font-family: "Barlow-Thin";
    src: url("./fonts/Barlow-Thin.ttf");
}

body {
    font-family: "Barlow";
    background-color: #2E1C2B;
    color: #eaeaea;
    overflow: hidden;
}

.glow {
    position: absolute;
    width: 80vh;
    height: 80vh;
    border-radius: 50%;
    pointer-events: none;
    background: radial-gradient(circle, #4A1942 0%, transparent 70%);
    transform: translate(-50%, -50%);
    mix-blend-mode: color-dodge;
}

.container {
    width: 100%;
    display: flex;
    justify-content: center;
}

.layout {
    width: 90%;
    margin: 0 auto;
    padding: 10px;
    display: grid;
    grid-template-columns: 1fr;
}

@media (min-width:768px) {
    .layout {
        width: 70%;
        padding: 40px;
    }
}

h1 {
    font-family: "Barlow";
    font-size: 5vh;
    text-shadow: 0px 5px 4px #050404;
    margin-top: auto;
    margin-bottom: 0.5vh;
}

h2 {
    font-family: "Barlow-Thin";
    font-size: 2.5vh;
    text-align: justify;
    text-justify: inter-word;
    margin-top: 0.5vh;
    margin-bottom: 2em;
}

a {
    text-decoration: none;
}

.header {
    width: 100%;
    align-items: baseline;
    display: grid;
    grid-template-columns: 1fr auto;
    column-gap: 2vh;
}

.about {
    opacity: 0;
    transition: opacity 0.5s ease-in;
}

.skills {
    opacity: 0;
    transition: opacity 0.5s ease-in;
}

.projects {
    opacity: 0;
    transition: opacity 0.5s ease-in;
}

.logos {
    display: grid;
    grid-auto-flow: column;
    grid-auto-columns: min-content;
    gap: .5em;
    text-shadow: 0px 5px 4px #050404;
}

.logos i {
    will-change: transform, opacity;
    transform: translateX(0) scale(var(--sizeX, 1), var(--sizeY, 1));
    height: 5vh;
    width: 5vh;
    font-size: 5vh;
    opacity: 0;
    display: flex;
    justify-content: center;
    align-items: center;
}

.fa-github,
.fa-linkedin,
.fa-envelope,
.fa-python,
.devicon-c-plain,
.devicon-csharp-plain,
.devicon-cplusplus-plain,
.fa-html5,
.fa-css3-alt,
.fa-js,
.devicon-php-plain
 {
    color: white;
    transition: color 0.2s ease-in-out;
}

.logos .fa-github {
    --sizeX: 0.92;
    --sizeY: 0.92;
}

.logos .fa-envelope {
    --sizeX: 0.92;
    --sizeY: 0.92;
}

.logos .devicon-c-plain {
    --sizeX: 0.92;
    --sizeY: 0.92;
}

.logos .devicon-csharp-plain {
    --sizeX: 0.92;
    --sizeY: 0.92;
}

.logos .devicon-cplusplus-plain {
    --sizeX: 0.88;
    --sizeY: 0.88;
}

.fa-github:hover,
.fa-github.hover {
    color: #2dba4e;
}

.fa-linkedin:hover,
.fa-linkedin.hover {
    color: #0077b5;
}

.fa-python:hover,
.fa-python.hover {
    color: #ffde57;
}

.devicon-c-plain:hover,
.devicon-c-plain.hover {
    color: #03599c;
}

.devicon-csharp-plain:hover,
.devicon-csharp-plain.hover {
    color: #68217a;
}

.devicon-cplusplus-plain:hover,
.devicon-cplusplus-plain.hover {
    color: #004482;
}

.fa-html5:hover, 
.fa-html5.hover {
    color: #e34f26;
}

.fa-css3-alt:hover,
.fa-css3-alt.hover {
    color: #264de4;
}

.fa-js:hover,
.fa-js.hover {
    color: #f7df1e;
}

.devicon-php-plain:hover,
.devicon-php-plain.hover {
    color: #ac5cd9;
}

@keyframes bounce {
    0% {
        transform: scale(var(--sizeX, 1), var(--sizeY, 1));
    }
    20% {
        transform: scale(calc(var(--sizeX, 1) + 0.2), calc(var(--sizeY, 1) - 0.2));
    }
    40% {
        transform: scale(var(--sizeX, 1), var(--sizeY, 1));
    }
    60% {
        transform: scale(calc(var(--sizeY, 1) - 0.2), calc(var(--sizeX, 1) + 0.2)) translateY(-1.5vh);
    }
    100% {
        transform: scale(var(--sizeX, 1), var(--sizeY, 1));
    }
}

.bounce {
    animation: bounce 0.5s ease-in-out;
    will-change: transform;
    backface-visibility: hidden;
}

@keyframes fadeFromRight {
    0% {
        opacity: 0;
        transform: translateX(100%);
    }
    100% {
        opacity: 1;
        transform: translateX(0);
    }
}

.fade-from-right {
    animation: fadeFromRight 0.3s forwards;
}

.fade-from-right::before {
    transform: scale(var(--sizeX, 1), var(--sizeY, 1));
}